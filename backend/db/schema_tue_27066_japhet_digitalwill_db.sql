
-- schema_tue_27066_japhet_digitalwill_db.sql

-- USERS
CREATE TABLE users (
    user_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    full_name VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) UNIQUE,
    phone_number VARCHAR2(20),
    date_of_birth DATE,
    address VARCHAR2(200),
    created_at DATE DEFAULT SYSDATE
);

-- WILLS
CREATE TABLE wills (
    will_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER REFERENCES users(user_id),
    title VARCHAR2(100) NOT NULL,
    description VARCHAR2(500),
    status VARCHAR2(20),
    created_at DATE DEFAULT SYSDATE,
    last_updated_at DATE DEFAULT SYSDATE
);

-- EXECUTORS
CREATE TABLE executors (
    executor_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    will_id NUMBER REFERENCES wills(will_id),
    full_name VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) NOT NULL,
    phone_number VARCHAR2(20),
    relation VARCHAR2(50),
    is_primary CHAR(1) CHECK (is_primary IN ('Y', 'N'))
);

-- WILL STATUS HISTORY
CREATE TABLE will_status_history (
    history_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    will_id NUMBER REFERENCES wills(will_id),
    old_status VARCHAR2(20),
    new_status VARCHAR2(20),
    changed_by VARCHAR2(100),
    change_date DATE DEFAULT SYSDATE,
    reason VARCHAR2(255)
);

-- ASSETS
CREATE TABLE assets (
    asset_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    will_id NUMBER REFERENCES wills(will_id),
    name VARCHAR2(100) NOT NULL,
    description VARCHAR2(255),
    asset_type VARCHAR2(50),
    value NUMBER(12, 2),
    location VARCHAR2(200),
    acquisition_date DATE
);

-- DOCUMENTS
CREATE TABLE documents (
    document_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    related_entity VARCHAR2(20) CHECK (related_entity IN ('WILL', 'ASSET')),
    entity_id NUMBER,
    title VARCHAR2(100) NOT NULL,
    description VARCHAR2(255),
    file_path VARCHAR2(500),
    file_type VARCHAR2(50),
    upload_date DATE DEFAULT SYSDATE
);

-- BENEFICIARIES
CREATE TABLE beneficiaries (
    beneficiary_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    full_name VARCHAR2(100) NOT NULL,
    relation VARCHAR2(50),
    email VARCHAR2(100),
    phone_number VARCHAR2(20),
    address VARCHAR2(200),
    date_of_birth DATE,
    notes VARCHAR2(500)
);

-- WILL ASSET BENEFICIARIES (MAPPING)
CREATE TABLE will_asset_beneficiaries (
    mapping_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    asset_id NUMBER REFERENCES assets(asset_id),
    beneficiary_id NUMBER REFERENCES beneficiaries(beneficiary_id),
    share_percent NUMBER(5,2) CHECK (share_percent >= 0 AND share_percent <= 100),
    conditions VARCHAR2(500)
);

-- TRANSFER LOGS
CREATE TABLE transfer_logs (
    transfer_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    asset_id NUMBER REFERENCES assets(asset_id),
    beneficiary_id NUMBER REFERENCES beneficiaries(beneficiary_id),
    transfer_date DATE DEFAULT SYSDATE,
    approved_by VARCHAR2(100),
    transfer_status VARCHAR2(20),
    notes VARCHAR2(500)
);

-- HOLIDAYS
CREATE TABLE holidays (
    holiday_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    holiday_date DATE UNIQUE,
    description VARCHAR2(100),
    is_recurring CHAR(1) CHECK (is_recurring IN ('Y', 'N'))
);

-- AUDIT LOG
CREATE TABLE audit_log (
    audit_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_name VARCHAR2(50),
    action VARCHAR2(10),
    action_table VARCHAR2(50),
    record_id NUMBER,
    old_values CLOB,
    new_values CLOB,
    timestamp DATE DEFAULT SYSDATE,
    status VARCHAR2(10),
    ip_address VARCHAR2(15)
);
